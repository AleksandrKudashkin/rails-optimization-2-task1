Measure Mode: wall_time
Thread ID: 70348808839200
Fiber ID: 70348800835820
Total: 0.591246
Sort by: self_time

 %self      total      self      wait     child     calls  name                           location
 18.25      0.551     0.108     0.000     0.443        9   Array#each                     
 17.44      0.217     0.103     0.000     0.114    11047   <Class::Date>#parse            
 12.03      0.311     0.071     0.000     0.239    22000   Array#map                      
  8.55      0.051     0.051     0.000     0.000    22094   Regexp#match                   
  6.04      0.036     0.036     0.000     0.000    26095   String#split                   
  5.60      0.055     0.033     0.000     0.022    11047   Refactored#parse_session       /Users/alex/active/rails-optimization/rails-optimization-2-task1/02-task-1-refactored.rb:25
  3.79      0.022     0.022     0.000     0.000    11047   String#gsub!                   
  3.38      0.020     0.020     0.000     0.000    11047   MatchData#begin                
  3.22      0.036     0.019     0.000     0.017        1   JSON::Ext::Generator::GeneratorMethods::Hash#to_json 
  2.89      0.028     0.017     0.000     0.011     4001   Array#sort                     
  2.57      0.015     0.015     0.000     0.000    11047   Date#iso8601                   
  2.15      0.013     0.013     0.000     0.000    33053   String#encode                  
  1.84      0.011     0.011     0.000     0.000    22483   Date#<=>                       
  1.74      0.010     0.010     0.000     0.000    14000   Hash#merge                     
  1.50      0.009     0.009     0.000     0.000    11047   String#[]=                     
  1.30      0.008     0.008     0.000     0.000    11047   Integer#div                    
  1.11      0.007     0.007     0.000     0.000    11047   Set#add                        /Users/alex/.rvm/rubies/ruby-2.6.3/lib/ruby/2.6.0/set.rb:348
  0.89      0.007     0.005     0.000     0.001     2000   Array#any?                     
  0.80      0.005     0.005     0.000     0.000    19686   String#upcase                  
  0.76      0.004     0.004     0.000     0.000    22094   String#to_i                    
  0.76      0.004     0.004     0.000     0.000    11047   MatchData#end                  
  0.46      0.003     0.003     0.000     0.000    16004   String#to_s                    
  0.42      0.003     0.002     0.000     0.001     2000   Array#all?                     
  0.37      0.005     0.002     0.000     0.002     2000   Refactored#parse_user          /Users/alex/active/rails-optimization/rails-optimization-2-task1/02-task-1-refactored.rb:15
  0.37      0.002     0.002     0.000     0.000     2001   Array#join                     
  0.30      0.003     0.002     0.000     0.001     2003  *Class#new                      
  0.24      0.001     0.001     0.000     0.000     9047   Kernel#nil?                    
  0.22      0.001     0.001     0.000     0.000     2000   Array#reverse                  
  0.20      0.001     0.001     0.000     0.000     2002   Hash#keys                      
  0.17      0.001     0.001     0.000     0.000     4000   Integer#to_s                   
  0.16      0.001     0.001     0.000     0.000     2000   User#initialize                /Users/alex/active/rails-optimization/rails-optimization-2-task1/01-task-1.rb:10
  0.11      0.001     0.001     0.000     0.000        1   <Class::IO>#write              
  0.07      0.000     0.000     0.000     0.000     2000   Array#max                      
  0.07      0.000     0.000     0.000     0.000        1   <Class::IO>#read               
  0.06      0.000     0.000     0.000     0.000     2000   Array#sum                      
  0.06      0.000     0.000     0.000     0.000     2001   NilClass#nil?                  
  0.06      0.000     0.000     0.000     0.000     2001   Array#count                    
  0.03      0.591     0.000     0.000     0.591        1   Refactored#work                /Users/alex/active/rails-optimization/rails-optimization-2-task1/02-task-1-refactored.rb:54
  0.02      0.000     0.000     0.000     0.000        2   Hash#each_key                  
  0.00      0.591     0.000     0.000     0.591        1   [global]#                      07-ruby-prof-reports.rb:9
  0.00      0.433     0.000     0.000     0.432        7   Refactored#collect_stats_from_users /Users/alex/active/rails-optimization/rails-optimization-2-task1/02-task-1-refactored.rb:46
  0.00      0.000     0.000     0.000     0.000        2   Set#each                       /Users/alex/.rvm/rubies/ruby-2.6.3/lib/ruby/2.6.0/set.rb:336
  0.00      0.000     0.000     0.000     0.000        1   Kernel#dup                     
  0.00      0.000     0.000     0.000     0.000        1   Enumerable#count               
  0.00      0.000     0.000     0.000     0.000        1   Set#initialize                 /Users/alex/.rvm/rubies/ruby-2.6.3/lib/ruby/2.6.0/set.rb:93
  0.00      0.000     0.000     0.000     0.000        1   Refactored#initialize          /Users/alex/active/rails-optimization/rails-optimization-2-task1/02-task-1-refactored.rb:10
  0.00      0.000     0.000     0.000     0.000        1   Enumerable#map                 
  0.00      0.000     0.000     0.000     0.000        1   Hash#initialize                
  0.00      0.000     0.000     0.000     0.000        1   Symbol#to_s                    
  0.00      0.000     0.000     0.000     0.000        1   JSON::Ext::Generator::State#initialize_copy 
  0.00      0.000     0.000     0.000     0.000        1   Kernel#initialize_dup          

* recursively called methods

Columns are:

  %self     - The percentage of time spent in this method, derived from self_time/total_time.
  total     - The time spent in this method and its children.
  self      - The time spent in this method.
  wait      - The amount of time this method waited for other threads.
  child     - The time spent in this method's children.
  calls     - The number of times this method was called.
  name      - The name of the method.
  location  - The location of the method.

The interpretation of method names is:

  * MyObject#test - An instance method "test" of the class "MyObject"
  * <Object:MyObject>#test - The <> characters indicate a method on a singleton class.
